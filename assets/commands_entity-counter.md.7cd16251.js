import{_ as n}from"./chunks/3.035a77e6.js";import{_ as t,c as s,a as o,w as r,e,r as l,o as i,d as c}from"./404.md.e854e0c1.js";const x=JSON.parse('{"title":"Entity Counter","description":"","frontmatter":{"title":"Entity Counter","category":"Scoreboard Systems","mention":["BedrockCommands","EziGotFliped"],"nav_order":3,"tags":["system"]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Setup","slug":"setup","link":"#setup","children":[]},{"level":2,"title":"System","slug":"system","link":"#system","children":[]},{"level":2,"title":"Explanation","slug":"explanation","link":"#explanation","children":[]}],"relativePath":"commands/entity-counter.md"}'),d={name:"commands/entity-counter.md"},p=e('<h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p><a href="https://discord.gg/SYstTYx5G5" target="_blank" rel="noreferrer">Sourced By Bedrock Commands Community Discord</a></p><p>This system allows you to track how many players/entities are there on your world and run your desired commands based on the values obtained.</p><blockquote><p>Note; you cannot track entities in unloaded chunks though players can still be tracked regardless.</p></blockquote><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-hidden="true">#</a></h2><p><em>To be typed in chat:</em></p><p><code>/scoreboard objectives add total dummy</code></p><h2 id="system" tabindex="-1">System <a class="header-anchor" href="#system" aria-hidden="true">#</a></h2>',8),u=e(`<div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki"><code><span class="line"><span style="color:#C3E88D;">/scoreboard players set onlinePlayers total 0</span></span>
<span class="line"><span style="color:#C3E88D;">/execute as @e [type=player] run scoreboard players add onlinePlayers total 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#Your Commands Here (examples)</span></span>
<span class="line"><span style="color:#C3E88D;">/execute if score onlinePlayers total matches 4.. run title @a actionbar Enough players to start game.</span></span>
<span class="line"><span style="color:#C3E88D;">/execute if score onlinePlayers total matches ..3 run title @a actionbar Not enough players.</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="`+n+'" alt="commandBlockChain3"></p><p>Here we have used a FakePlayer name <code>onlinePlayers</code> and targeting <code>@e [type=player]</code> to track how many players are currently on the world. However you may use any FakePlayer name and target any entity you might need. Such as <code>@e [type=creeper]</code></p><p>Similarly we&#39;re running a <code>/title</code> command as an example;</p><ul><li>a) when there are 4 or more players <code>4..</code></li><li>b) when there are 3 players or less <code>..3</code></li></ul><p>You can edit this as well to suit your need.</p><h2 id="explanation" tabindex="-1">Explanation <a class="header-anchor" href="#explanation" aria-hidden="true">#</a></h2><ul><li>The first two commands in the system sets the FakePlayer name&#39;s score to 0 (here <code>onlinePlayers</code>) and from each loaded entity we want to track (here <code>type=player</code>) it will add a score to the specified FakePlayer name (here <code>onlinePlayers</code>)</li></ul><p>Now based on the values obtained we can use the <code>/execute if score</code> command to run our desired commands when certain values are met.</p><ul><li><strong><code>n</code></strong> any number n</li><li><strong><code>n..</code></strong> any number n and above</li><li><strong><code>..n</code></strong> any number n and below</li><li><strong><code>n1..n2</code></strong> any number n1 to any number n2.</li></ul>',10);function m(y,h,_,b,g,k){const a=l("CodeHeader");return i(),s("div",null,[p,o(a,null,{default:r(()=>[c("mcfunction")]),_:1}),u])}const C=t(d,[["render",m]]);export{x as __pageData,C as default};
