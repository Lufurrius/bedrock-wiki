import{_ as s}from"./chunks/4.bf191be1.js";import{_ as n,c as o,a as r,w as t,e,r as l,o as i,d}from"./404.md.e854e0c1.js";const w=JSON.parse('{"title":"On Player Join","description":"","frontmatter":{"title":"On Player Join","category":"On Event Systems","mention":["BedrockCommands","EziGotFliped"],"nav_order":2,"tags":["system"]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Setup","slug":"setup","link":"#setup","children":[]},{"level":2,"title":"System","slug":"system","link":"#system","children":[]},{"level":2,"title":"Explanation","slug":"explanation","link":"#explanation","children":[]}],"relativePath":"commands/on-player-join.md"}'),p={name:"commands/on-player-join.md"},c=e('<h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p><a href="https://discord.gg/SYstTYx5G5" target="_blank" rel="noreferrer">Sourced By Bedrock Commands Community Discord</a></p><p>This system will run your desired commands on the event that a players joins the world.</p><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-hidden="true">#</a></h2><p><em>To be typed in chat:</em></p><p><code>/scoreboard objectives add joined dummy</code></p><h2 id="system" tabindex="-1">System <a class="header-anchor" href="#system" aria-hidden="true">#</a></h2>',7),m=e(`<div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki"><code><span class="line"><span style="color:#C3E88D;">/scoreboard players add @a joined 0</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#Your Commands Here (example)</span></span>
<span class="line"><span style="color:#C3E88D;">/tp @a[scores={joined=0}] 0 65 0</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard players reset * joined</span></span>
<span class="line"><span style="color:#C3E88D;">/scoreboard players set @a joined 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="`+s+'" alt="commandBlockChain4"></p><p>Here we have used a <code>/tp</code> command as an example but you can use any command you prefer and as many as you require.</p><p>Just make sure to follow the given order and properly add the selector argument <code>scores={joined=0}</code> as shown for your desired commands.</p><h2 id="explanation" tabindex="-1">Explanation <a class="header-anchor" href="#explanation" aria-hidden="true">#</a></h2><p>When the player joins, a 0 is added to their objective, this allows us to run commands from them using the &#39;scores&#39; selector argument.</p><p>Immediately after the commands are run, we reset all the scores on the objective using wildcard <strong><code>*</code></strong> and only players who stayed online will have their score set to 1.</p><p>And this way, since our commands only target players with the score 0, the commands won&#39;t repeat again for the players who stayed unless they leave and rejoin or if we run: <code>/scoreboard players set &lt;player&gt; joined 0</code></p>',8);function u(h,y,_,b,g,f){const a=l("CodeHeader");return i(),o("div",null,[c,r(a,null,{default:t(()=>[d("mcfunction")]),_:1}),m])}const x=n(p,[["render",u]]);export{w as __pageData,x as default};
